# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - movie-bot

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '9.0.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
        
      #substitute production appsettings entries to appsettings json file
      - name: App Settings Variable Substitution
        uses: microsoft/variable-substitution@v1
        with:
          files: '${{env.DOTNET_ROOT}}\myapp\appsettings.json'
        env:
          ContentSources.Kinopoisk: ${{ secrets.MOVIE_BOT_SEARCHER }}
          ContentSources.Lab: ${{ secrets.MOVIE_BOT_LAB }}
          ContentSources.LabReferer: ${{ secrets.MOVIE_BOT_LAB_REFERER }}
          ContentSources.LabOrigin: ${{ secrets.MOVIE_BOT_LAB_ORIGIN }}
          ContentSources.Yohoho: ${{ secrets.MOVIE_BOT_YOHOHO }}
          ContentSources.YohoReferer: ${{ secrets.MOVIE_BOT_REFERER }}
          Config.AccessToken: ${{ secrets.MOVIE_BOT_ACCESS_TOKEN }}
          Config.Confirmation: ${{ secrets.MOVIE_BOT_CONFIRMATION }}
          Telegram.HostAddress: ${{ secrets.TELEGRAM_HOST }}
          Telegram.BotToken: ${{ secrets.TELEGRAM_TOKEN }}
          Telegram.SecretToken: ${{ secrets.TELEGRAM_SECRET }}
          Llm.Model: ${{ secrets.LLM_MODEL }}
          Llm.ApiKey: ${{ secrets.LLM_API_KEY }}
          Llm.Provider: ${{ secrets.LLM_PROVIDER }}
          GithubAuth.ClientId: ${{secrets.AUTH_GITHUB_CLIENT_ID}}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'movie-bot'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_6BC19D629CBD441BA75735A2F598A90A }}
          package: .
